<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

	<batch:job id="ioSampleJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="itemReader" writer="itemWriter" commit-interval="10" >
					<batch:streams>
                		<batch:stream ref="itemWriterA" />
                		<batch:stream ref="itemWriterB" />
            		</batch:streams>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="itemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="select PersonID, LastName, FirstName from Persons" />
		<property name="rowMapper">
			<bean class="io.spring.util.PersonRowMapper" />
		</property>
	</bean>
	
	<bean id="itemWriter" class="org.springframework.batch.item.support.ClassifierCompositeItemWriter">
		<property name="classifier" ref="classifier" />
	</bean>
	
	<bean id="classifier"  class="org.springframework.classify.BackToBackPatternClassifier">
    	<property name="routerDelegate">
        	<bean class="io.spring.batch.CustomItemClassifier" />
    	</property>
    	<property name="matcherMap">
        	<map>
        		<entry key="1" value-ref="itemWriterA" />
        		<entry key="2" value-ref="itemWriterB" />
        	</map>
    	</property>
	</bean>

	<bean id="itemWriterA" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:///Users/lwang/Desktop/out1.txt" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</property>
	</bean>
	
	<bean id="itemWriterB" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:///Users/lwang/Desktop/out2.txt" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</property>
	</bean>
	
	<bean id="itemProcessor" class="io.spring.batch.CustomItemProcessor" />

	<!-- connect to database -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="lwang" />
		<property name="password" value="aaa" />
	</bean>

</beans>